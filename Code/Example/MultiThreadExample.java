class Task1 extends Thread {
    public void run() {
        for (int i = 1; i <= 5; i++) {
            System.out.println("ðŸŒŸ Task 1 - Step " + i);
            try {
                Thread.sleep(1000); // Dá»«ng 1 giÃ¢y
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println("âœ… Task 1 hoÃ n thÃ nh.");
    }
}

class Task2 implements Runnable {
    public void run() {
        for (int i = 1; i <= 5; i++) {
            System.out.println("ðŸš€ Task 2 - Step " + i);
            try {
                Thread.sleep(1000); // Dá»«ng 1 giÃ¢y
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println("âœ… Task 2 hoÃ n thÃ nh.");
    }
}

public class MultiThreadExample {
    public static void main(String[] args) {
        System.out.println("ðŸš¦ Báº¯t Ä‘áº§u cháº¡y Ä‘a luá»“ng...");

        Task1 t1 = new Task1();                  // Táº¡o Thread tá»« Task1
        Thread t2 = new Thread(new Task2());     // Táº¡o Thread tá»« Task2

        t1.start(); // Cháº¡y Task1
        t2.start(); // Cháº¡y Task2

        // CÃ³ thá»ƒ thÃªm logic cho main thread náº¿u cáº§n
        for (int i = 1; i <= 5; i++) {
            System.out.println("ðŸ”§ Main thread Ä‘ang cháº¡y: BÆ°á»›c " + i);
            try {
                Thread.sleep(900); // Dá»«ng 0.9 giÃ¢y
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println("âœ… Main thread hoÃ n thÃ nh.");
    }
}
